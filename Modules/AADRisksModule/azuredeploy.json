{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-AADUserRisksInfo",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName":"[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "accessControl": {
                    "triggers": {
                        "allowedCallerIpAddresses": []
                    }
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Condition_-_Terminate_if_no_supported_entities": {
                            "actions": {
                                "Response_-_Send_empty_results": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "AnalyzedEntities": 0,
                                            "DetailedResults": [],
                                            "FailedMFATotalCount": 0,
                                            "HighestRiskyLevel": 0,
                                            "MFAFraudTotalCount": 0,
                                            "ModuleName": "@{parameters('PlaybookInternalName')}"
                                        },
                                        "statusCode": 200
                                    }
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response_-_Send_empty_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Parse_JSON')?['AccountsCount']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_Error": {
                            "actions": {
                                "Response_Access_Issue": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "Error": "@{parameters('PlaybookInternalName')} failed to execute with status @{body('Filter_array')[0]['statusCode']}",
                                            "PlaybookName": "@{workflow()?['name']}",
                                            "PlaybookResourceId": "@{workflow()?['id']}",
                                            "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                            "SourceError": "@{body('Filter_array')[0]['body']}"
                                        },
                                        "statusCode": "@body('Filter_array')[0]['statusCode']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Compose": {
                                        "runAfter": {},
                                        "type": "Compose",
                                        "inputs": "@result('For_each_account')"
                                    },
                                    "Compose_-_HighestRiskLevel": {
                                        "runAfter": {
                                            "Create_CSV_table_to_calculate_HighestRiskLevel": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Compose",
                                        "inputs": "@if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'high'), 'high', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'medium'), 'medium', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'low'), 'low', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'none'),'none','unknown'))))"
                                    },
                                    "Compose_response": {
                                        "runAfter": {
                                            "Compose_-_HighestRiskLevel": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Compose",
                                        "inputs": {
                                            "AnalyzedEntities": "@length(variables('DetailedResults'))",
                                            "DetailedResults": "@variables('DetailedResults')",
                                            "FailedMFATotalCount": "@variables('FailedMFATotalCount')",
                                            "HighestRiskLevel": "@{outputs('Compose_-_HighestRiskLevel')}",
                                            "MFAFraudTotalCount": "@variables('MFAFraudTotalCount')",
                                            "ModuleName": "@{parameters('PlaybookInternalName')}"
                                        }
                                    },
                                    "Condition_-_Add_Task": {
                                        "actions": {
                                            "HTTP_-_Add_Incident_Task": {
                                                "runAfter": {},
                                                "type": "Http",
                                                "inputs": {
                                                    "authentication": {
                                                        "audience": "https://management.azure.com",
                                                        "type": "ManagedServiceIdentity"
                                                    },
                                                    "body": {
                                                        "properties": {
                                                            "description": "@{take(triggerBody()?['IncidentTaskInstructions'],3000)}",
                                                            "status": "New",
                                                            "title": "Review Related AD User Risks"
                                                        }
                                                    },
                                                    "method": "PUT",
                                                    "uri": "https://management.azure.com@{body('Parse_JSON')?['IncidentARMId']}/tasks/@{guid()}?api-version=2022-12-01-preview"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Condition_-_Add_comment": [
                                                "Succeeded",
                                                "Failed"
                                            ]
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@triggerBody()?['AddIncidentTask']",
                                                        true
                                                    ]
                                                },
                                                {
                                                    "or": [
                                                        {
                                                            "greater": [
                                                                "@variables('FailedMFATotalCount')",
                                                                0
                                                            ]
                                                        },
                                                        {
                                                            "greater": [
                                                                "@variables('MFAFraudTotalCount')",
                                                                0
                                                            ]
                                                        },
                                                        {
                                                            "not": {
                                                                "contains": [
                                                                    "@outputs('Compose_-_HighestRiskLevel')",
                                                                    "@createArray('none','unknown')"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Condition_-_Add_comment": {
                                        "actions": {
                                            "Add_comment_to_incident": {
                                                "runAfter": {
                                                    "Create_HTML_table_for_comments": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "@body('Parse_JSON')?['IncidentARMId']",
                                                        "message": "<p>Number of analyzed entities: @{length(variables('DetailedResults'))}<br>\nHighest risk level found: @{if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'high'), 'high', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'medium'), 'medium', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'low'), 'low', if(contains(body('Create_CSV_table_to_calculate_HighestRiskLevel'), 'none'),'none','unknown'))))}<br>\nTotal failed MFA attempts: @{variables('FailedMFATotalCount')} (lookup enabled:@{triggerBody()?['MFAFailureLookup']})<br>\nTotal MFA fraud reports: @{variables('MFAFraudTotalCount')} (lookup enabled:@{triggerBody()?['MFAFraudLookup']})<br>\n<br>\nDetailed results :&nbsp;@{if(equals(length(outputs('Compose_response')['DetailedResults']),0),'No results',body('Create_HTML_table_for_comments'))}<br>\n</p>"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/Incidents/Comment"
                                                }
                                            },
                                            "Create_HTML_table_for_comments": {
                                                "runAfter": {},
                                                "type": "Table",
                                                "inputs": {
                                                    "format": "HTML",
                                                    "from": "@outputs('Compose_response')['DetailedResults']"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Compose_response": [
                                                "Succeeded"
                                            ]
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@triggerBody()?['AddIncidentComments']",
                                                        "@true"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Create_CSV_table_to_calculate_HighestRiskLevel": {
                                        "runAfter": {
                                            "Compose": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Table",
                                        "inputs": {
                                            "columns": [
                                                {
                                                    "header": "",
                                                    "value": "@toLower(item()['UserRiskLevel'])"
                                                }
                                            ],
                                            "format": "CSV",
                                            "from": "@variables('DetailedResults')"
                                        }
                                    },
                                    "Response": {
                                        "runAfter": {
                                            "Condition_-_Add_Task": [
                                                "Succeeded",
                                                "Failed"
                                            ]
                                        },
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": "@outputs('Compose_response')",
                                            "statusCode": 200
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Filter_array'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Filter_array": {
                            "runAfter": {
                                "For_each_account": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@variables('ErrorManagement')",
                                "where": "@not(equals(item()?['statusCode'], 404))"
                            }
                        },
                        "Filter_array_-_Get_only_accounts_with_an_id": {
                            "runAfter": {
                                "Condition_-_Terminate_if_no_supported_entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['Accounts']",
                                "where": "@greater(length(coalesce(item()?['id'], '')), 0)"
                            }
                        },
                        "For_each_account": {
                            "foreach": "@body('Filter_array_-_Get_only_accounts_with_an_id')",
                            "actions": {
                                "Append_to_array_variable_DetailedResults": {
                                    "runAfter": {
                                        "Compose_DetailedResults": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "DetailedResults",
                                        "value": "@outputs('Compose_DetailedResults')"
                                    }
                                },
                                "Append_to_array_variable_ErrorManagement": {
                                    "runAfter": {
                                        "HTTP_-_Lookup_user_riskLevel": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "ErrorManagement",
                                        "value": "@outputs('HTTP_-_Lookup_user_riskLevel')"
                                    }
                                },
                                "Compose_DetailedResults": {
                                    "runAfter": {
                                        "Increment_variable_FailedMFATotalCount": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "UserFailedMFACount": "@coalesce(body('Select_failed_MFA')?[0]?['Count'],0)",
                                        "UserId": "@{items('For_each_account')['id']}",
                                        "UserMFAFraudsCount": "@coalesce(body('Select_MFA_frauds')?[0]?['Count'],0)",
                                        "UserPrincipalName": "@{coalesce(item()?['UserPrincipalName'],'Unknown')}",
                                        "UserRiskLevel": "@{coalesce(body('HTTP_-_Lookup_user_riskLevel')?['riskLevel'],'Unknown')}"
                                    }
                                },
                                "Condition_-_Failed_MFA_lookup": {
                                    "actions": {
                                        "Compose_KQL_for_Failed_MFA": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "SigninLogs\n| where ResultType == \"500121\"\n| where UserId== \"@{items('For_each_account')['id']}\"\n| summarize Count=count() by UserPrincipalName"
                                        },
                                        "HTTP_-_Lookup_for_Failed_MFA": {
                                            "runAfter": {
                                                "Compose_KQL_for_Failed_MFA": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://api.loganalytics.io/",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "query": "@{outputs('Compose_KQL_for_Failed_MFA')}",
                                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                                },
                                                "method": "POST",
                                                "uri": "https://api.loganalytics.io/v1/workspaces/@{body('Parse_JSON')?['WorkspaceId']}/query"
                                            }
                                        },
                                        "Select_failed_MFA": {
                                            "runAfter": {
                                                "HTTP_-_Lookup_for_Failed_MFA": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Select",
                                            "inputs": {
                                                "from": "@body('HTTP_-_Lookup_for_Failed_MFA')['tables'][0]['rows']",
                                                "select": {
                                                    "@{body('HTTP_-_Lookup_for_Failed_MFA')['tables'][0]['columns'][0]['name']}": "@item()[0]",
                                                    "@{body('HTTP_-_Lookup_for_Failed_MFA')['tables'][0]['columns'][1]['name']}": "@item()[1]"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['MFAFailureLookup']",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_-_MFA_fraud_lookup": {
                                    "actions": {
                                        "Compose_KQL_for_MFA_frauds": {
                                            "inputs": "AuditLogs \n| where OperationName in (\"Fraud reported - user is blocked for MFA\",\"Fraud reported - no action taken\")\n| where ResultDescription == \"Successfully reported fraud\"\n| extend Id= tostring(parse_json(tostring(InitiatedBy.user)).id)\n| where Id == \"@{item()['id']}\"\n| summarize Count=count() by Id",
                                            "runAfter": {},
                                            "type": "Compose",
                                        },
                                        "HTTP_-_Lookup_for_MFA_frauds": {
                                            "runAfter": {
                                                "Compose_KQL_for_MFA_frauds": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://api.loganalytics.io",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "query": "@{outputs('Compose_KQL_for_MFA_frauds')}",
                                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                                },
                                                "method": "POST",
                                                "uri": "https://api.loganalytics.io/v1/workspaces/@{body('Parse_JSON')?['WorkspaceId']}/query"
                                            }
                                        },
                                        "Select_MFA_frauds": {
                                            "runAfter": {
                                                "HTTP_-_Lookup_for_MFA_frauds": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Select",
                                            "inputs": {
                                                "from": "@body('HTTP_-_Lookup_for_MFA_frauds')['tables'][0]['rows']",
                                                "select": {
                                                    "@{body('HTTP_-_Lookup_for_MFA_frauds')['tables'][0]['columns'][0]['name']}": "@item()[0]",
                                                    "@{body('HTTP_-_Lookup_for_MFA_frauds')['tables'][0]['columns'][1]['name']}": "@item()[1]"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['MFAFraudLookup']",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP_-_Lookup_user_riskLevel": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com/",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/v1.0/identityProtection/riskyUsers/@{items('For_each_account')['id']}"
                                    }
                                },
                                "Increment_variable_FailedMFATotalCount": {
                                    "runAfter": {
                                        "Increment_variable_MFAFraudTotalCount": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "FailedMFATotalCount",
                                        "value": "@coalesce(body('Select_failed_MFA')?[0]?['Count'],0)"
                                    }
                                },
                                "Increment_variable_MFAFraudTotalCount": {
                                    "runAfter": {
                                        "Condition_-_Failed_MFA_lookup": [
                                            "Succeeded"
                                        ],
                                        "Condition_-_MFA_fraud_lookup": [
                                            "Succeeded"
                                        ],
                                        "HTTP_-_Lookup_user_riskLevel": [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "MFAFraudTotalCount",
                                        "value": "@coalesce(body('Select_MFA_frauds')?[0]?['Count'],0)"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_ErrorManagement": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_DetailedResults": {
                            "runAfter": {
                                "Filter_array_-_Get_only_accounts_with_an_id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DetailedResults",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_ErrorManagement": {
                            "runAfter": {
                                "Initialize_variable_MFAFraudTotalCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ErrorManagement",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_FailedMFATotalCount": {
                            "runAfter": {
                                "Initialize_variable_DetailedResults": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FailedMFATotalCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_MFAFraudTotalCount": {
                            "runAfter": {
                                "Initialize_variable_FailedMFATotalCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MFAFraudTotalCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['Entities']",
                                "schema": {
                                    "properties": {
                                        "Accounts": {
                                            "description": "Array of User Accounts",
                                            "items": {
                                                "properties": {
                                                    "AssignedRoles": {
                                                        "description": "Array of assigned roles in Accounts array",
                                                        "items": {
                                                            "properties": {
                                                                "Role": {
                                                                    "description": "Array property in AssignedRoles array"
                                                                }
                                                            },
                                                            "required": [],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Accounts array",
                                                        "properties": {
                                                            "accountName": {
                                                                "description": "accountName from RawEntity object in Accounts array"
                                                            },
                                                            "displayName": {
                                                                "description": "dislayName from RawEntity object in Accounts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Accounts array"
                                                            },
                                                            "isDomainJoined": {
                                                                "description": "isDomainJoined from RawEntity object in Accounts array"
                                                            },
                                                            "sid": {
                                                                "description": "sid from RawEntity object in Accounts array"
                                                            },
                                                            "upnSuffix": {
                                                                "description": "upnSuffix from RawEntity object in Accounts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "accountEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "city": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "country": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "department": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "id": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "jobTitle": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "mail": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "manager": {
                                                        "description": "Array property in Accounts array",
                                                        "properties": {
                                                            "@@odata.type": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "id": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "mail": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "userPrincipalName": {
                                                                "description": "Array property in Accounts array manager object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "officeLocation": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDistinguishedName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDomainName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSamAccountName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSecurityIdentifier": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSyncEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "state": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "userPrincipalName": {
                                                        "description": "Array property in Accounts array"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "AccountsCount": {
                                            "description": "Count of accounts processed by module",
                                            "type": "integer"
                                        },
                                        "Domains": {
                                            "description": "Array of Domains",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Domains array",
                                                        "properties": {
                                                            "domainName": {
                                                                "description": "domainName from RawEntity object in Domains array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Domains array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DomainsCount": {
                                            "description": "Count of Domains processed by module",
                                            "type": "integer"
                                        },
                                        "EntitiesCount": {
                                            "description": "Count of all entities processed by enrichment module",
                                            "type": "integer"
                                        },
                                        "FileHashes": {
                                            "description": "Array of FileHashes",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in FileHashes array",
                                                        "properties": {
                                                            "algorithm": {
                                                                "description": "algorithm from RawEntity object in FileHashes array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in FileHashes array"
                                                            },
                                                            "hashValue": {
                                                                "description": "hashValue from RawEntity object in FileHashes array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FileHashesCount": {
                                            "description": "Count of File Hashes processed by module",
                                            "type": "integer"
                                        },
                                        "Files": {
                                            "description": "Array of Files",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Files array",
                                                        "properties": {
                                                            "directory": {
                                                                "description": "directory from RawEntity object in Files array"
                                                            },
                                                            "fileName": {
                                                                "description": "fileName from RawEntity object in Files array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Files array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FilesCount": {
                                            "description": "Count of Files processed by module",
                                            "type": "integer"
                                        },
                                        "Hosts": {
                                            "description": "Array of Hosts",
                                            "items": {
                                                "properties": {
                                                    "DnsDomain": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "FQDN": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "Hostname": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Hosts array",
                                                        "properties": {
                                                            "dnsDomain": {
                                                                "description": "dnsDomain from RawEntity object in Hosts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Hosts array"
                                                            },
                                                            "hostName": {
                                                                "description": "hostName from RawEntity object in Hosts array"
                                                            },
                                                            "netBiosName": {
                                                                "description": "netBiosName from RawEntity object in Hosts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "HostsCount": {
                                            "description": "Count of Hosts processed by module",
                                            "type": "integer"
                                        },
                                        "IPs": {
                                            "description": "Array of IP Addresses",
                                            "items": {
                                                "properties": {
                                                    "Address": {
                                                        "description": "Array property in IPs array"
                                                    },
                                                    "GeoData": {
                                                        "description": "Array object in IPs array",
                                                        "properties": {
                                                            "asn": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "carrier": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "city": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "cityCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "continent": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "country": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "countryCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipAddr": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipRoutingType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "latitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "longitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organization": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organizationType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "region": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "state": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCode": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in IPs array",
                                                        "properties": {
                                                            "address": {
                                                                "description": "address from RawEntity object in IPs array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in IPs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "IPsCount": {
                                            "description": "Count of IPs processed by module",
                                            "type": "integer"
                                        },
                                        "IncidentARMId": {
                                            "description": "The ARM Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        },
                                        "URLs": {
                                            "description": "Array of URLs",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in URLs array",
                                                        "properties": {
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in URLs array"
                                                            },
                                                            "url": {
                                                                "description": "url from RawEntity object in URLs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "URLsCount": {
                                            "description": "Count of URLs processed by module",
                                            "type": "integer"
                                        },
                                        "WorkspaceId": {
                                            "description": "The Log Analytics Workspace Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "PlaybookVersion": {
                            "defaultValue": "0.1.0",
                            "type": "String"
                        },
                        "PlaybookInternalName": {
                            "defaultValue": "AADRisksModule",
                            "type": "String"
                        },
                        "ProjectName": {
                            "defaultValue": "STAT",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "title": "Add comments to the incident",
                                            "type": "boolean"
                                        },
                                        "AddIncidentTask": {
                                            "description": "Add a task to the Sentinel Incident",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the EnrichedEntities object from the Dynamic content menu",
                                            "type": "array"
                                        },
                                        "IncidentTaskInstructions": {
                                            "description": "Instructions to include the the Incident task if created",
                                            "type": "string"
                                        },
                                        "LookbackInDays": {
                                            "description": "Enter a value between 1 and 90",
                                            "maximum": 90,
                                            "minimum": 1,
                                            "title": "Lookback period in days",
                                            "type": "integer"
                                        },
                                        "MFAFailureLookup": {
                                            "title": "Look for failed MFA attempts",
                                            "type": "boolean"
                                        },
                                        "MFAFraudLookup": {
                                            "title": "Look for MFA Fraud reports",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}
