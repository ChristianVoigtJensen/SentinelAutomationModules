{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Run-KQLQuery",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "accessControl": {
                    "triggers": {
                        "allowedCallerIpAddresses": []
                    }
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "PlaybookVersion": {
                            "defaultValue": "0.2.0",
                            "type": "String"
                        },
                        "PlaybookInternalName": {
                            "defaultValue": "KQLModule",
                            "type": "String"
                        },
                        "ProjectName": {
                            "defaultValue": "STAT",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "description": "Add comment to the Sentinel Incident",
                                            "type": "boolean"
                                        },
                                        "AddIncidentTask": {
                                            "description": "Add a task to the Sentinel Incident",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the Body object from the Base-Module output in the Dynamic content menu",
                                            "title": "Base Module Body",
                                            "type": "array"
                                        },
                                        "IncidentTaskInstructions": {
                                            "description": "Instructions to include the the Incident task if created",
                                            "type": "string"
                                        },
                                        "KQLQuery": {
                                            "description": "Enter the KQL query you wan to execute",
                                            "type": "string"
                                        },
                                        "LookbackInDays": {
                                            "description": "Enter the number of days you want to lookback in the KQL data",
                                            "type": "integer"
                                        },
                                        "QueryDescription": {
                                            "description": "This description will be added to the incident comment for additional context on the query",
                                            "type": "string"
                                        },
                                        "RunQueryAgainst": {
                                            "description": "Enter Sentinel or M365",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition_-_Add_Comments": {
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Parse_JSON')?['IncidentARMId']",
                                            "message": "<p>@{if(not(equals(triggerBody()?['QueryDescription'], null)), concat(triggerBody()?['QueryDescription'], '<p>'),null)}A total of @{variables('ResultCount')} records were found in a @{triggerBody()?['RunQueryAgainst']} search.<br>\n@{take(body('Create_HTML_table'), 28000)}@{if(equals(body('Parse_JSON')?['ModuleVersions']?['KQLModule'], null), '', if(not(equals(body('Parse_JSON')?['ModuleVersions']?['KQLModule'], parameters('PlaybookVersion'))), concat('<br>Sentinel Triage AssistanT - KQL Module Update Available: Installed Version: ', parameters('PlaybookVersion'), ', Available Version: ', body('Parse_JSON')?['ModuleVersions']?['KQLModule']), ''))}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                }
                            },
                            "runAfter": {
                                "Create_HTML_table": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddIncidentComments']",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Add_Tasks": {
                            "actions": {
                                "Compose_-_Full_URL": {
                                    "runAfter": {
                                        "Compose_-_Time_Range_Component": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "https://portal.azure.com/#view/Microsoft_OperationsManagementSuite_Workspace/Logs.ReactView/scope~/@{encodeUriComponent(outputs('Compose_-_Resource_Component'))}/source/AIExtension.UsageNotebookBlade/timespan/@{encodeUriComponent(outputs('Compose_-_Time_Range_Component'))}/query/@{encodeUriComponent(triggerBody()?['KQLQuery'])}/prettify/1"
                                },
                                "Compose_-_Resource_Component": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": {
                                        "resources": [
                                            {
                                                "resourceId": "/subscriptions/@{variables('armId')[2]}/resourcegroups/@{variables('armId')[4]}/providers/microsoft.operationalinsights/workspaces/@{variables('armId')[8]}"
                                            }
                                        ]
                                    }
                                },
                                "Compose_-_Time_Range_Component": {
                                    "runAfter": {
                                        "Compose_-_Resource_Component": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@{addDays(utcNow(),mul(triggerBody()?['LookbackInDays'],-1))}/@{utcNow()}"
                                },
                                "Compose_Task": {
                                    "runAfter": {
                                        "Compose_-_Full_URL": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "<a href=@{outputs('Compose_-_Full_URL')}>Query Results</a>\n\n@{if(empty(triggerBody()?['IncidentTaskInstructions']), 'Review the KQL Query Results', triggerBody()?['IncidentTaskInstructions'])}\n"
                                },
                                "HTTP_-_Create_Task": {
                                    "runAfter": {
                                        "Compose_Task": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://management.azure.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "body": {
                                            "properties": {
                                                "description": "@{take(outputs('Compose_Task'),3000)}",
                                                "status": "New",
                                                "title": "@{if(empty(triggerBody()?['QueryDescription']), 'Review KQL Query', triggerBody()?['QueryDescription'])}"
                                            }
                                        },
                                        "method": "PUT",
                                        "uri": "https://management.azure.com@{body('Parse_JSON')?['IncidentARMId']}/tasks/@{guid()}?api-version=2022-12-01-preview"
                                    }
                                }
                            },
                            "runAfter": {
                                "Create_HTML_table": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddIncidentTask']",
                                            true
                                        ]
                                    },
                                    {
                                        "greater": [
                                            "@length(variables('Records'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_HTML_table": {
                            "runAfter": {
                                "Switch": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "HTML",
                                "from": "@variables('Records')"
                            }
                        },
                        "Initialize_ARMId_Array": {
                            "runAfter": {
                                "Initialize_variable_-_Results_Found": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "armId",
                                        "type": "array",
                                        "value": "@split(body('Parse_JSON')?['IncidentARMId'], '/')"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Records": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Records",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Result_Count": {
                            "runAfter": {
                                "Initialize_variable_-_Records": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ResultCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Results_Found": {
                            "runAfter": {
                                "Initialize_variable_-_Result_Count": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ResultsFound",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['Entities']",
                                "schema": {
                                    "properties": {
                                        "Accounts": {
                                            "description": "Array of User Accounts",
                                            "items": {
                                                "properties": {
                                                    "AssignedRoles": {
                                                        "description": "Array of assigned roles in Accounts array",
                                                        "items": {
                                                            "properties": {
                                                                "Role": {
                                                                    "description": "Array property in AssignedRoles array"
                                                                }
                                                            },
                                                            "required": [],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Accounts array",
                                                        "properties": {
                                                            "accountName": {
                                                                "description": "accountName from RawEntity object in Accounts array"
                                                            },
                                                            "displayName": {
                                                                "description": "dislayName from RawEntity object in Accounts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Accounts array"
                                                            },
                                                            "isDomainJoined": {
                                                                "description": "isDomainJoined from RawEntity object in Accounts array"
                                                            },
                                                            "sid": {
                                                                "description": "sid from RawEntity object in Accounts array"
                                                            },
                                                            "upnSuffix": {
                                                                "description": "upnSuffix from RawEntity object in Accounts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "accountEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "city": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "country": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "department": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "id": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "jobTitle": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "mail": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "manager": {
                                                        "description": "Array property in Accounts array",
                                                        "properties": {
                                                            "@@odata.type": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "id": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "mail": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "userPrincipalName": {
                                                                "description": "Array property in Accounts array manager object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "officeLocation": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDistinguishedName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDomainName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSamAccountName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSecurityIdentifier": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSyncEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "state": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "userPrincipalName": {
                                                        "description": "Array property in Accounts array"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "AccountsCount": {
                                            "description": "Count of accounts processed by module",
                                            "type": "integer"
                                        },
                                        "Domains": {
                                            "description": "Array of Domains",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Domains array",
                                                        "properties": {
                                                            "domainName": {
                                                                "description": "domainName from RawEntity object in Domains array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Domains array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DomainsCount": {
                                            "description": "Count of Domains processed by module",
                                            "type": "integer"
                                        },
                                        "EntitiesCount": {
                                            "description": "Count of all entities processed by enrichment module",
                                            "type": "integer"
                                        },
                                        "FileHashes": {
                                            "description": "Array of FileHashes",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in FileHashes array",
                                                        "properties": {
                                                            "algorithm": {
                                                                "description": "algorithm from RawEntity object in FileHashes array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in FileHashes array"
                                                            },
                                                            "hashValue": {
                                                                "description": "hashValue from RawEntity object in FileHashes array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FileHashesCount": {
                                            "description": "Count of File Hashes processed by module",
                                            "type": "integer"
                                        },
                                        "Files": {
                                            "description": "Array of Files",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Files array",
                                                        "properties": {
                                                            "directory": {
                                                                "description": "directory from RawEntity object in Files array"
                                                            },
                                                            "fileName": {
                                                                "description": "fileName from RawEntity object in Files array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Files array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FilesCount": {
                                            "description": "Count of Files processed by module",
                                            "type": "integer"
                                        },
                                        "Hosts": {
                                            "description": "Array of Hosts",
                                            "items": {
                                                "properties": {
                                                    "DnsDomain": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "FQDN": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "Hostname": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Hosts array",
                                                        "properties": {
                                                            "dnsDomain": {
                                                                "description": "dnsDomain from RawEntity object in Hosts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Hosts array"
                                                            },
                                                            "hostName": {
                                                                "description": "hostName from RawEntity object in Hosts array"
                                                            },
                                                            "netBiosName": {
                                                                "description": "netBiosName from RawEntity object in Hosts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "HostsCount": {
                                            "description": "Count of Hosts processed by module",
                                            "type": "integer"
                                        },
                                        "IPs": {
                                            "description": "Array of IP Addresses",
                                            "items": {
                                                "properties": {
                                                    "Address": {
                                                        "description": "Array property in IPs array"
                                                    },
                                                    "GeoData": {
                                                        "description": "Array object in IPs array",
                                                        "properties": {
                                                            "asn": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "carrier": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "city": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "cityCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "continent": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "country": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "countryCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipAddr": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipRoutingType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "latitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "longitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organization": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organizationType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "region": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "state": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCode": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in IPs array",
                                                        "properties": {
                                                            "address": {
                                                                "description": "address from RawEntity object in IPs array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in IPs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "IPsCount": {
                                            "description": "Count of IPs processed by module",
                                            "type": "integer"
                                        },
                                        "IncidentARMId": {
                                            "description": "The ARM Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        },
                                        "ModuleVersions": {
                                            "properties": {
                                                "AADRisksModule": {
                                                    "type": "string"
                                                },
                                                "BaseModule": {
                                                    "type": "string"
                                                },
                                                "FileModule": {
                                                    "type": "string"
                                                },
                                                "KQLModule": {
                                                    "type": "string"
                                                },
                                                "MCASModule": {
                                                    "type": "string"
                                                },
                                                "MDEModule": {
                                                    "type": "string"
                                                },
                                                "OOFModule": {
                                                    "type": "string"
                                                },
                                                "RelatedAlerts": {
                                                    "type": "string"
                                                },
                                                "TIModule": {
                                                    "type": "string"
                                                },
                                                "UEBAModule": {
                                                    "type": "string"
                                                },
                                                "WatchlistModule": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "URLs": {
                                            "description": "Array of URLs",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in URLs array",
                                                        "properties": {
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in URLs array"
                                                            },
                                                            "url": {
                                                                "description": "url from RawEntity object in URLs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "URLsCount": {
                                            "description": "Count of URLs processed by module",
                                            "type": "integer"
                                        },
                                        "WorkspaceId": {
                                            "description": "The Log Analytics Workspace Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response_-_Success": {
                            "runAfter": {
                                "Set_variable_-_ResultsFound": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "DetailedResults": "@variables('Records')",
                                    "LogicAppRunId": "@{workflow()?['run']?['name']}",
                                    "ModuleName": "@{parameters('PlaybookInternalName')}",
                                    "ResultsCount": "@variables('ResultCount')",
                                    "ResultsFound": "@variables('ResultsFound')"
                                },
                                "statusCode": 200
                            }
                        },
                        "Select_-_Accounts_Array": {
                            "runAfter": {
                                "Initialize_ARMId_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['Accounts']",
                                "select": {
                                    "id": "@item()?['id']",
                                    "managerUPN": "@item()?['manager']?['userPrincipalName']",
                                    "onPremisesSamAccountName": "@item()?['onPremisesSamAccountName']",
                                    "onPremisesSecurityIdentifier": "@item()?['onPremisesSecurityIdentifier']",
                                    "userPrincipalName": "@item()?['userPrincipalName']"
                                }
                            }
                        },
                        "Select_-_Hosts_Array": {
                            "runAfter": {
                                "Select_-_IP_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['Hosts']",
                                "select": {
                                    "FQDN": "@item()?['FQDN']",
                                    "Hostname": "@item()?['Hostname']"
                                }
                            }
                        },
                        "Select_-_IP_Array": {
                            "runAfter": {
                                "Select_-_Accounts_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['IPs']",
                                "select": {
                                    "Address": "@item()?['Address']",
                                    "Country": "@item()?['GeoData']?['country']",
                                    "Latitude": "@item()?['GeoData']?['latitude']",
                                    "Longitude": "@item()?['GeoData']?['longitude']",
                                    "State": "@item()?['GeoData']?['state']"
                                }
                            }
                        },
                        "Set_variable_-_ResultsFound": {
                            "runAfter": {
                                "Condition_-_Add_Comments": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "Condition_-_Add_Tasks": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "ResultsFound",
                                "value": "@greater(variables('ResultCount'), 0)"
                            }
                        },
                        "Switch": {
                            "runAfter": {
                                "Select_-_Hosts_Array": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case_-_M365": {
                                    "case": "m365",
                                    "actions": {
                                        "Compose_-_M365_Query": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "let accountData = @'@{replace(string(body('Select_-_Accounts_Array')), '''', '''''')}';\nlet ipData = @'@{replace(string(body('Select_-_IP_Array')), '''', '''''')}';\nlet hostData = @'@{replace(string(body('Select_-_Hosts_Array')), '''', '''''')}';\nlet accountEntities = datatable(temp:string)['']\n| extend Entities = parse_json(accountData)\n| mv-expand todynamic(Entities)\n| project UserPrincipalName = tostring(Entities.userPrincipalName), SamAccountName = tostring(Entities.onPremisesSamAccountName), ObjectSID = tostring(Entities.onPremisesSecurityIdentifier), AADUserId = tostring(Entities.id), ManagerUPN = tostring(Entities.managerUPN);\nlet ipEntities = datatable(temp:string)['']\n| extend Entities = parse_json(ipData)\n| mv-expand todynamic(Entities)\n| project IPAddress = tostring(Entities.Address), Latitude = todecimal(Entities.Latitude), Longitude = todecimal(Entities.Longitude), Country=tostring(Entities.Country), State=tostring(Entities.State);\nlet hostEntities = datatable(temp:string)['']\n| extend Entities = parse_json(hostData)\n| mv-expand todynamic(Entities)\n| project FQDN = tostring(Entities.FQDN), Hostname = tostring(Entities.Hostname);\n@{triggerBody()?['KQLQuery']}"
                                        },
                                        "HTTP_-_M365": {
                                            "runAfter": {
                                                "Compose_-_M365_Query": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://api.security.microsoft.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "Query": "@{outputs('Compose_-_M365_Query')}"
                                                },
                                                "method": "POST",
                                                "queries": {
                                                    "Content-Type": "application/json"
                                                },
                                                "uri": "https://api.security.microsoft.com/api/advancedhunting/run"
                                            }
                                        },
                                        "Response_2": {
                                            "runAfter": {
                                                "HTTP_-_M365": [
                                                    "Failed"
                                                ]
                                            },
                                            "type": "Response",
                                            "kind": "Http",
                                            "inputs": {
                                                "body": {
                                                    "Error": "@{parameters('PlaybookInternalName')} failed to execute with status @{outputs('HTTP_-_M365')['statusCode']}",
                                                    "PlaybookName": "@{workflow()?['name']}",
                                                    "PlaybookResourceId": "@{workflow()?['id']}",
                                                    "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                                    "PlaybookVersion": "@parameters('PlaybookVersion')",
                                                    "SourceError": "@body('HTTP_-_M365')"
                                                },
                                                "statusCode": "@outputs('HTTP_-_M365')['statusCode']"
                                            }
                                        },
                                        "Set_variable_-_Records": {
                                            "runAfter": {
                                                "HTTP_-_M365": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Records",
                                                "value": "@take(body('HTTP_-_M365')['Results'], 10)"
                                            }
                                        },
                                        "Set_variable_-_ResultCount": {
                                            "runAfter": {
                                                "Set_variable_-_Records": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "ResultCount",
                                                "value": "@length(body('HTTP_-_M365')['Results'])"
                                            }
                                        }
                                    }
                                },
                                "Case_-_Sentinel": {
                                    "case": "sentinel",
                                    "actions": {
                                        "Compose_-_Sentinel_Query": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "let accountData = @'@{replace(string(body('Select_-_Accounts_Array')), '''', '''''')}';\nlet ipData = @'@{replace(string(body('Select_-_IP_Array')), '''', '''''')}';\nlet hostData = @'@{replace(string(body('Select_-_Hosts_Array')), '''', '''''')}';\nlet incidentArmId = '@{body('Parse_JSON')?['IncidentARMId']}';\nlet accountEntities = datatable(temp:string)['']\n| extend Entities = parse_json(accountData)\n| mv-expand todynamic(Entities)\n| project UserPrincipalName = tostring(Entities.userPrincipalName), SamAccountName = tostring(Entities.onPremisesSamAccountName), ObjectSID = tostring(Entities.onPremisesSecurityIdentifier), AADUserId = tostring(Entities.id), ManagerUPN = tostring(Entities.managerUPN);\nlet ipEntities = datatable(temp:string)['']\n| extend Entities = parse_json(ipData)\n| mv-expand todynamic(Entities)\n| project IPAddress = tostring(Entities.Address), Latitude = todecimal(Entities.Latitude), Longitude = todecimal(Entities.Longitude), Country=tostring(Entities.Country), State=tostring(Entities.State);\nlet hostEntities = datatable(temp:string)['']\n| extend Entities = parse_json(hostData)\n| mv-expand todynamic(Entities)\n| project FQDN = tostring(Entities.FQDN), Hostname = tostring(Entities.Hostname);\n@{triggerBody()?['KQLQuery']}\n| extend STATResponse = pack_all()\n| project STATResponse\n\n"
                                        },
                                        "For_each": {
                                            "foreach": "@take(body('HTTP_-_Sentinel')['tables'][0]['rows'], 10)",
                                            "actions": {
                                                "Append_to_array_variable": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "Records",
                                                        "value": "@json(item()[0])"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_-_Sentinel": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach",
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            }
                                        },
                                        "HTTP_-_Sentinel": {
                                            "runAfter": {
                                                "Compose_-_Sentinel_Query": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://api.loganalytics.io",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "query": "@{outputs('Compose_-_Sentinel_Query')}",
                                                    "timespan": "P@{triggerBody()?['LookbackInDays']}D"
                                                },
                                                "method": "POST",
                                                "uri": "https://api.loganalytics.io/v1/workspaces/@{body('Parse_JSON')?['WorkspaceId']}/query"
                                            }
                                        },
                                        "Response": {
                                            "runAfter": {
                                                "HTTP_-_Sentinel": [
                                                    "Failed"
                                                ]
                                            },
                                            "type": "Response",
                                            "kind": "Http",
                                            "inputs": {
                                                "body": {
                                                    "Error": "@{parameters('PlaybookInternalName')} failed to execute with status @{outputs('HTTP_-_Sentinel')['statusCode']}",
                                                    "PlaybookName": "@{workflow()?['name']}",
                                                    "PlaybookResourceId": "@{workflow()?['id']}",
                                                    "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                                    "PlaybookVersion": "@parameters('PlaybookVersion')",
                                                    "SourceError": "@body('HTTP_-_Sentinel')"
                                                },
                                                "statusCode": "@outputs('HTTP_-_Sentinel')['statusCode']"
                                            }
                                        },
                                        "Set_variable_-_ResultCount_2": {
                                            "runAfter": {
                                                "For_each": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "ResultCount",
                                                "value": "@length(body('HTTP_-_Sentinel')['tables'][0]['rows'])"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {
                                    "Response_-_WatchlistKeyDataType": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": {
                                                "Error": "@{parameters('PlaybookInternalName')} failed. Invalid RunQueryAgainst: @{triggerBody()?['RunQueryAgainst']}",
                                                "PlaybookName": "@{workflow()?['name']}",
                                                "PlaybookResourceId": "@{workflow()?['id']}",
                                                "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                                "PlaybookVersion": "@parameters('PlaybookVersion')"
                                            },
                                            "statusCode": 400
                                        }
                                    },
                                    "Terminate": {
                                        "runAfter": {
                                            "Response_-_WatchlistKeyDataType": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Terminate",
                                        "inputs": {
                                            "runStatus": "Failed"
                                        }
                                    }
                                }
                            },
                            "expression": "@toLower(triggerBody()?['RunQueryAgainst'])",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
    "resourceID": {
        "type": "string",
        "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}